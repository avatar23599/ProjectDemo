package com.demo.entities;
// Generated Mar 7, 2024, 10:52:49â€¯AM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.*;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "warehousemanagement")
public class Product implements java.io.Serializable {

	private Integer id;
	private Category category;
	private String name;
	private double price;
	private int quantity;
	private String description;
	private String status;
	private String picture;
	private Set<Outputinfor> outputinfors = new HashSet<Outputinfor>(0);
	private Set<AccountProuduct> accountProuducts = new HashSet<AccountProuduct>(0);
	private Set<InfoPicture> infoPictures = new HashSet<InfoPicture>(0);
	private Set<Picture> pictures = new HashSet<Picture>(0);
	private Set<Inputifo> inputifos = new HashSet<Inputifo>(0);

	public Product() {
	}

	public Product(Category category, String name, double price, int quantity, String description, String status,
			String picture) {
		this.category = category;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.description = description;
		this.status = status;
		this.picture = picture;
	}

	public Product(Category category, String name, double price, int quantity, String description, String status,
			String picture, Set<Outputinfor> outputinfors, Set<AccountProuduct> accountProuducts,
			Set<InfoPicture> infoPictures, Set<Picture> pictures, Set<Inputifo> inputifos) {
		this.category = category;
		this.name = name;
		this.price = price;
		this.quantity = quantity;
		this.description = description;
		this.status = status;
		this.picture = picture;
		this.outputinfors = outputinfors;
		this.accountProuducts = accountProuducts;
		this.infoPictures = infoPictures;
		this.pictures = pictures;
		this.inputifos = inputifos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "price", nullable = false, precision = 22, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "description", nullable = false, length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "status", nullable = false, length = 250)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "picture", nullable = false, length = 250)
	public String getPicture() {
		return this.picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Outputinfor> getOutputinfors() {
		return this.outputinfors;
	}

	public void setOutputinfors(Set<Outputinfor> outputinfors) {
		this.outputinfors = outputinfors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<AccountProuduct> getAccountProuducts() {
		return this.accountProuducts;
	}

	public void setAccountProuducts(Set<AccountProuduct> accountProuducts) {
		this.accountProuducts = accountProuducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<InfoPicture> getInfoPictures() {
		return this.infoPictures;
	}

	public void setInfoPictures(Set<InfoPicture> infoPictures) {
		this.infoPictures = infoPictures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Picture> getPictures() {
		return this.pictures;
	}

	public void setPictures(Set<Picture> pictures) {
		this.pictures = pictures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Inputifo> getInputifos() {
		return this.inputifos;
	}

	public void setInputifos(Set<Inputifo> inputifos) {
		this.inputifos = inputifos;
	}

}
